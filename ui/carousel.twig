{#
 based on:
  https://christianheilmann.com/2015/04/08/keeping-it-simple-coding-a-carousel/

 enhancements:
  * self-contained (<script> inside <div> so can access without id or class)
  * automatically cycles through slides
  * pause automatic cycle when hovering over carousel
  * doesn't set up the rest of the carousel when there's only one image
  * only shows first image when javascript disabled
  * force square layout

 expects 'images' to be an array of [ thumbnail, alt_text ]
#}
<style type="text/css">
  .carousel {
    position: relative;
    width: 100%;
  }
  .carousel:before {
    content: "";
    display: block;
    padding-top: 100%;
  }
  .carousel ol {
    margin: 0;
    padding: 0;

    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }
  .carousel li {
    margin: 0; padding: 0;

    list-style: none;
    z-index: 2;

    display: block;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;

    opacity: 0;
    transition: 1s;
  }
  .carousel li img {
    width: 100%;
    height: 100%;
    object-fit: scale-down;
  }
  .carousel li.current, .carousel:not(.active) li:first-child {
    opacity: 1;
    transition: 1s;
  }
  .carousel button:not(.edit) {
    visibility: hidden;
  }
  .carousel.active button:not(.edit) {
    visibility: visible;
  } 
  .carousel .buttons {
    text-align: center;
    z-index: 10;
    position: absolute;
    bottom: 0; 
    width: 100%;
    padding-bottom: 1em;
  }
</style>

<figure class="thumbnail carousel" {{ not images[0].id ? 'style="border: 1px solid red"' }}>
  <ol class="carousel-content">
    {% for image in images %}
      <li>
        <img class=""
             src="{{ (image.medium and not thumb) ? image.medium : image.thumbnail }}"
             alt="{{ image.alt_text }}">
      </li>
    {% endfor %}
  </ol>
  <div class="buttons">
    <button class="prev btn btn-default btn-xs">
       ◀ <span class="sr-only">Previous</span>
    </button>
    {% if edit %}
      <button class="edit btn btn-default btn-xs" data-action="{{ edit }}">
        <span class="sr-only">Edit</span> <i class="fa fa-edit"></i>
      </button>
    {% endif %}
    <button class="next btn btn-default btn-xs">
      <span class="sr-only">Next</span> ▶ 
    </button>
  </div>
  {# critical that <script> be inside div so currentScript.parentNode works #}
  <script>
  {
    let box= document.currentScript.parentNode

    let next= box.querySelector('.next')
    let prev= box.querySelector('.prev')
    let edit= box.querySelector('.edit')
    // Define the global counter, the items and the current item 
    let counter= 0
    let items= box.querySelectorAll('.carousel-content li')
    let amount= items.length
    // If we only have one slide, don't bother showing controls
    if (amount > 1) {
      box.classList.add('active')

      // navigate through the carousel
      let navigate= (direction= 1) => {
        // hide the current slide
        items[counter].classList.remove('current')
        
        // calculate the new position
        counter= (counter + direction) % amount
        counter= counter < 0 ? amount - 1 : counter

        // show the new slide
        items[counter].classList.add('current')
      }

      let interval= setInterval(navigate, 5000)

      // add event handlers to box to pause/resume
      box.addEventListener('mouseenter', (ev) => {
        clearInterval(interval)
      })
      box.addEventListener('mouseleave', (ev) => {
        interval= setInterval(navigate, 5000)
      })

      // add event handlers to buttons
      next.addEventListener('click', (ev) => {
        navigate(1)
      })
      prev.addEventListener('click', (ev) => {
        navigate(-1)
      })
      // show the first element 
      navigate(0)
    }
  }
  </script>
</figure>
